version: '3.7'

services:
  zybach.api:
    build:
      args:
        source: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - Kestrel__Certificates__Default__Path=/https/host.docker.internal.pfx
      - Kestrel__Certificates__Default__Password=password#1
      - KEYSTONE_HOST=${KEYSTONE_HOST}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SITKA_EMAIL_REDIRECT=${SITKA_EMAIL_REDIRECT}
      - WEB_URL=${WEB_URL}
      - SECRET_PATH=${SECRET_PATH}
      - KEYSTONE_REDIRECT_URL=${KEYSTONE_REDIRECT_URL}
      - PlatformLongName=${PlatformLongName}
      - PlatformShortName=${PlatformShortName}
      - DoNotReplyEmail=${DoNotReplyEmail}
      - AppAlertsEmail=${AppAlertsEmail}
      - SupportEmail=${SupportEmail}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUX_BUCKET=${INFLUX_BUCKET}
      - GEOOPTIX_HOSTNAME=${GEOOPTIX_HOSTNAME}
      - GEOOPTIX_SEARCH_HOSTNAME=${GEOOPTIX_SEARCH_HOSTNAME}
      - AGHUB_API_BASE_URL=${AGHUB_API_BASE_URL}
      - AGHUB_API_BUCKET=${AGHUB_API_BUCKET}
      - GET_API_BASE_URL=${GET_API_BASE_URL}
      - GET_ROBUST_REVIEW_SCENARIO_RUN_CUSTOMER_ID=${GET_ROBUST_REVIEW_SCENARIO_RUN_CUSTOMER_ID}
      - GET_ROBUST_REVIEW_SCENARIO_RUN_USER_ID=${GET_ROBUST_REVIEW_SCENARIO_RUN_USER_ID}
      - GET_ROBUST_REVIEW_SCENARIO_RUN_MODEL_ID=${GET_ROBUST_REVIEW_SCENARIO_RUN_MODEL_ID}
      - GET_ROBUST_REVIEW_SCENARIO_RUN_SCENARIO_ID=${GET_ROBUST_REVIEW_SCENARIO_RUN_SCENARIO_ID}
      - VEGA_RENDER_URL=${VEGA_RENDER_URL}
      - OpenETAPIBaseUrl=${OpenETAPIBaseUrl}
      - OpenETRasterTimeSeriesMultipolygonRoute=${OpenETRasterTimeSeriesMultipolygonRoute}
      - OpenETRasterMetadataRoute=${OpenETRasterMetadataRoute}
      - OpenETAllFilesReadyForExportRoute=${OpenETAllFilesReadyForExportRoute}
      - OpenETGoogleBucketBaseURL=${OpenETGoogleBucketBaseURL}
      - DefaultBoundingBoxLeft=${DefaultBoundingBoxLeft}
      - DefaultBoundingBoxRight=${DefaultBoundingBoxRight}
      - DefaultBoundingBoxTop=${DefaultBoundingBoxTop}
      - DefaultBoundingBoxBottom=${DefaultBoundingBoxBottom}
      - OpenETRasterTimeseriesMultipolygonColumnToUseAsIdentifier=${OpenETRasterTimeseriesMultipolygonColumnToUseAsIdentifier}
      - AllowOpenETSync=${AllowOpenETSync}    
    ports:
      - "8711:8080"
      - "8712:8081"
    volumes:
      - ~/.aspnet/https:/https:ro

  zybach.swagger:
    build:
      args:
        source: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - Kestrel__Certificates__Default__Path=/https/host.docker.internal.pfx
      - Kestrel__Certificates__Default__Password=password#1
      - APPINSIGHTS_INSTRUMENTATIONKEY=${APPINSIGHTS_INSTRUMENTATIONKEY}
      - SECRET_PATH=${SWAGGER_SECRET_PATH}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUX_BUCKET=${INFLUX_BUCKET}
    volumes:
      - ~/.aspnet/https:/https:ro

  geoserver:
    container_name: zybach_geoserver
    image: kartoza/geoserver:2.16.2
    entrypoint: /bin/bash /opt/geoserver/data_dir/sitka-geoserver-config/scripts/sitka-entry-point.sh
    environment:
      - ENABLE_JSONP=true
      - CATALINA_OPTS=-DALLOW_ENV_PARAMETRIZATION=true
      - STABLE_EXTENSIONS=sqlserver-plugin
      # default login is admin unless a different value is specified here
      - GEOSERVER_ADMIN_USER=admin
      # default password is geoserver unless specified differently in the secret
      - GEOSERVER_ADMIN_PASSWORD_SECRET=/run/secrets/GeoserverAdminPassword.txt
      - GEOSERVER_SQL_SERVER_PASSWORD_SECRET=/run/secrets/GeoserverSqlServerPassword.txt
      - GEOSERVER_CONFIG_DIRECTORY=/opt/geoserver/data_dir
    ports:
      - 127.0.0.1:7615:8080
    volumes:
      - c:/git/sitkatech/zybach/Zybach.GeoServer/data_dir:/opt/geoserver/data_dir
    secrets:
      - GeoserverSqlServerPassword.txt
      - GeoserverAdminPassword.txt

  vegarenderservice:
    container_name: zybach_vegarenderservice
    image: esacontainers.azurecr.io/vegarenderservice:latest
    environment:
      - PORT=8090
    ports:
      - "8709:8080"
      - "8710:8081"

secrets:
  GeoserverSqlServerPassword.txt:
    file: C:\Sitka\Zybach\Geoserver\GeoserverSqlServerPassword.txt
      # using "file:"  allows you to mimic docker secrets on your dev machine by pointing to a plaintext file
  GeoserverAdminPassword.txt:
    file: C:\Sitka\Zybach\Geoserver\GeoserverAdminPassword.txt