{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"BookDto": {
				"properties": {
					"title": {
						"type": "string"
					},
					"author": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"author"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BookCreateDto": {
				"properties": {
					"title": {
						"type": "string"
					},
					"author": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"author"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomRichTextTypeDto": {
				"properties": {
					"CustomRichTextTypeID": {
						"type": "number",
						"format": "double"
					},
					"CustomRichTextTypeName": {
						"type": "string"
					},
					"CustomRichTextTypeDisplayName": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomRichTextDto": {
				"properties": {
					"CustomRichTextID": {
						"type": "number",
						"format": "double"
					},
					"CustomRichTextType": {
						"$ref": "#/components/schemas/CustomRichTextTypeDto"
					},
					"CustomRichTextContent": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CustomRichTextUpdateDto": {
				"properties": {
					"CustomRichTextContent": {
						"type": "string"
					}
				},
				"required": [
					"CustomRichTextContent"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FieldDefinitionTypeDto": {
				"properties": {
					"FieldDefinitionTypeID": {
						"type": "number",
						"format": "double"
					},
					"FieldDefinitionTypeName": {
						"type": "string"
					},
					"FieldDefinitionTypeDisplayName": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FieldDefinitionDto": {
				"properties": {
					"FieldDefinitionID": {
						"type": "number",
						"format": "double"
					},
					"FieldDefinitionType": {
						"$ref": "#/components/schemas/FieldDefinitionTypeDto"
					},
					"FieldDefinitionValue": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"FieldDefinitionUpdateDto": {
				"properties": {
					"FieldDefinitionValue": {
						"type": "string"
					}
				},
				"required": [
					"FieldDefinitionValue"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SensorSummaryDto": {
				"properties": {
					"wellRegistrationID": {
						"type": "string"
					},
					"sensorName": {
						"type": "string"
					},
					"sensorType": {
						"type": "string"
					}
				},
				"required": [
					"wellRegistrationID",
					"sensorType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WellWithSensorSummaryDto": {
				"properties": {
					"wellRegistrationID": {
						"type": "string"
					},
					"wellTPID": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"location": {},
					"lastReadingDate": {
						"type": "string",
						"format": "date-time"
					},
					"sensors": {
						"items": {
							"$ref": "#/components/schemas/SensorSummaryDto"
						},
						"type": "array"
					}
				},
				"required": [
					"wellRegistrationID",
					"location",
					"sensors"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResult_WellWithSensorSummaryDto-Array_": {
				"properties": {
					"status": {
						"type": "string"
					},
					"result": {
						"items": {
							"$ref": "#/components/schemas/WellWithSensorSummaryDto"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RoleDto": {
				"properties": {
					"RoleID": {
						"type": "number",
						"format": "double"
					},
					"RoleDisplayName": {
						"type": "string"
					},
					"RoleName": {
						"type": "string"
					}
				},
				"required": [
					"RoleID",
					"RoleDisplayName",
					"RoleName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserDto": {
				"properties": {
					"UserID": {
						"type": "string"
					},
					"UserGuid": {
						"type": "string"
					},
					"FirstName": {
						"type": "string"
					},
					"LastName": {
						"type": "string"
					},
					"FullName": {
						"type": "string"
					},
					"Email": {
						"type": "string"
					},
					"Phone": {
						"type": "string"
					},
					"CreateDate": {
						"type": "string",
						"format": "date-time"
					},
					"UpdateDate": {
						"type": "string",
						"format": "date-time"
					},
					"LastActivityDate": {
						"type": "string",
						"format": "date-time"
					},
					"DisclaimerAcknowledgedDate": {
						"type": "string",
						"format": "date-time"
					},
					"ReceiveSupportEmails": {
						"type": "boolean"
					},
					"LoginName": {
						"type": "string"
					},
					"Company": {
						"type": "string"
					},
					"IsAnonymous": {
						"type": "boolean"
					},
					"Role": {
						"$ref": "#/components/schemas/RoleDto"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UserCreateDto": {
				"properties": {
					"LoginName": {
						"type": "string"
					},
					"UserGuid": {
						"type": "string"
					},
					"FirstName": {
						"type": "string"
					},
					"LastName": {
						"type": "string"
					},
					"Email": {
						"type": "string"
					},
					"Role": {
						"type": "string"
					}
				},
				"required": [
					"FirstName",
					"LastName",
					"Email",
					"Role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserEditDto": {
				"properties": {
					"Role": {
						"type": "string"
					},
					"ReceiveSupportEmails": {
						"type": "boolean"
					},
					"UserGuid": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"WellSummaryDto": {
				"properties": {
					"wellRegistrationID": {
						"type": "string"
					},
					"wellTPID": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"location": {},
					"lastReadingDate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"wellRegistrationID",
					"location"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResult_WellSummaryDto-Array_": {
				"properties": {
					"status": {
						"type": "string"
					},
					"result": {
						"items": {
							"$ref": "#/components/schemas/WellSummaryDto"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorResult": {
				"properties": {
					"status": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResultFromInfluxDB": {
				"properties": {
					"endTime": {
						"type": "string",
						"format": "date-time"
					},
					"gallons": {
						"type": "number",
						"format": "double"
					},
					"wellRegistrationID": {
						"type": "string"
					}
				},
				"required": [
					"endTime",
					"gallons",
					"wellRegistrationID"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AggregatedResult": {
				"properties": {
					"wellRegistrationID": {
						"type": "string"
					},
					"endTime": {
						"type": "string",
						"format": "date-time"
					},
					"gallons": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"wellRegistrationID",
					"endTime",
					"gallons"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VolumeByWell": {
				"properties": {
					"wellRegistrationID": {
						"type": "string"
					},
					"intervalCount": {
						"type": "number",
						"format": "double"
					},
					"intervalVolumes": {
						"items": {
							"$ref": "#/components/schemas/AggregatedResult"
						},
						"type": "array"
					}
				},
				"required": [
					"wellRegistrationID",
					"intervalCount",
					"intervalVolumes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"StructuredResults": {
				"properties": {
					"intervalCountTotal": {
						"type": "number",
						"format": "double"
					},
					"intervalWidthInMinutes": {
						"type": "number",
						"format": "double"
					},
					"intervalStart": {
						"type": "string"
					},
					"intervalEnd": {
						"type": "string"
					},
					"durationInMinutes": {
						"type": "number",
						"format": "double"
					},
					"wellCount": {
						"type": "number",
						"format": "double"
					},
					"volumesByWell": {
						"items": {
							"$ref": "#/components/schemas/VolumeByWell"
						},
						"type": "array"
					}
				},
				"required": [
					"intervalCountTotal",
					"intervalWidthInMinutes",
					"intervalStart",
					"intervalEnd",
					"durationInMinutes",
					"wellCount",
					"volumesByWell"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AbbreviatedWellDataResponse": {
				"properties": {
					"wellRegistrationID": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"tags": {},
					"location": {},
					"createDate": {},
					"updateDate": {},
					"sensors": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"wellRegistrationID",
					"description",
					"tags",
					"location",
					"createDate",
					"updateDate",
					"sensors"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "zybachapi",
		"version": "0.0.1",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/wells": {
			"get": {
				"operationId": "GetWells",
				"responses": {
					"200": {
						"description": "Returns a list of all wells",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResult_WellSummaryDto-Array_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized to perform request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"500": {
						"description": "If something went wrong within the API",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					}
				},
				"description": "Returns an array of all Wells in the Water Data Program registered in GeoOptix",
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/api/wells/pumpedVolume": {
			"get": {
				"operationId": "GetPumpedVolume",
				"responses": {
					"200": {
						"description": "Returns the requested time series",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"items": {
														"$ref": "#/components/schemas/ResultFromInfluxDB"
													},
													"type": "array"
												},
												{
													"$ref": "#/components/schemas/StructuredResults"
												}
											]
										},
										"status": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"status"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "If the inputs are improperly-formatted or the date range or reporting interval are invalid. Error message will describe the invalid parameter(s)",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized to perform request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"500": {
						"description": "If something went wrong within the API",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					}
				},
				"description": "Returns a time series representing pumped volume at a well or series of wells, summed on a chosen reporting interval,\r\nfor a given date range. Each point in the output time series represents the total pumped volume over the previous\r\nreporting interval.",
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "The start date for the report, formatted as an ISO date string (eg. 2020-06-23). If a specific\rtime is requested, must contain a timezone (eg. 2020-06-23T17:24:56+00:00)",
						"in": "query",
						"name": "startDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The Well Registration ID(s) for the requested Well(s). If left blank, will bring back data\rfor every Well that has reported data within the time range.",
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"description": "The end date for the report, formatted as an ISO date string (eg. 2020-06-23). If a specific\rtime is requested, must contain a timezone (eg. 2020-06-23T17:24:56+00:00). Default's to today's date.",
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The reporting interval, in minutes. Defaults to 60.",
						"in": "query",
						"name": "interval",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/wells/{wellRegistrationID}": {
			"get": {
				"operationId": "GetWell",
				"responses": {
					"200": {
						"description": "Returns a Well detail object which includes an array of associated sensors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/AbbreviatedWellDataResponse"
										},
										"status": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"status"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "If the inputs are improperly-formatted or the date range or reporting interval are invalid. Error message will describe the invalid parameter(s)",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized to perform request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"500": {
						"description": "If something went wrong within the API",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					}
				},
				"description": "Returns Well details from GeoOptix for a given well along with an array of sensors that have been associated\r\nwith that Well.",
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "The Well Registration ID for the requested Well",
						"in": "path",
						"name": "wellRegistrationID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/wells/{wellRegistrationID}/pumpedVolume": {
			"get": {
				"operationId": "GetPumpedVolumeByWell",
				"responses": {
					"200": {
						"description": "Returns the requested time series",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"items": {
														"$ref": "#/components/schemas/ResultFromInfluxDB"
													},
													"type": "array"
												},
												{
													"$ref": "#/components/schemas/StructuredResults"
												}
											]
										},
										"status": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"status"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "If the inputs are improperly-formatted or the date range or reporting interval are invalid. Error message will describe the invalid parameter(s)",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized to perform request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					},
					"500": {
						"description": "If something went wrong within the API",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResult"
								}
							}
						}
					}
				},
				"description": "Returns a time series representing pumped volume at a well, summed on a chosen reporting interval,\r\nfor a given date range. Each point in the output time series represents the total pumped volume over the previous\r\nreporting interval.",
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": [
					{
						"description": "The Well Registration ID for the requested well",
						"in": "path",
						"name": "wellRegistrationID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The start date for the report, formatted as an ISO date string (eg. 2020-06-23). If a specific\rtime is requested, must contain a timezone (eg. 2020-06-23T17:24:56+00:00)",
						"in": "query",
						"name": "startDate",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The end date for the report, formatted as an ISO date string (eg. 2020-06-23). If a specific\rtime is requested, must contain a timezone (eg. 2020-06-23T17:24:56+00:00). Default's to today's date.",
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The reporting interval, in minutes. Defaults to 60.",
						"in": "query",
						"name": "interval",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}